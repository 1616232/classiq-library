qfunc full_hea<num_qubits: int, is_parametrized: int[], angle_params: real[], connectivity_map: int[][], reps: int, operands_1qubit: qfunc[] <angle: real>(q: qbit), operands_2qubit: qfunc[] <angle: real>(q1: qbit, q2: qbit)>(x: qbit[num_qubits]) {
  repeat<reps, lambda<r>() {
    repeat<len(operands_1qubit), lambda<i1>() {
      repeat<num_qubits, lambda<index>() {
        if<is_parametrized[i1] == 1, lambda() {
          operands_1qubit[i1]<angle_params[(sum(is_parametrized[0:i1]) + floor((len(angle_params) / reps) * r)) + index]>(x[index]);
        }, lambda() {
          operands_1qubit[i1]<0>(x[index]);
        }>();
      }>();
    }>();
    repeat<len(operands_2qubit), lambda<i2>() {
      repeat<len(connectivity_map), lambda<index>() {
        if<is_parametrized[len(operands_1qubit) + i2] == 1, lambda() {
          operands_2qubit[i2]<angle_params[(((num_qubits * sum(is_parametrized[0:len(operands_1qubit)])) + ((+len(connectivity_map)) * sum(is_parametrized[len(operands_1qubit):(len(operands_1qubit) + i2)]))) + floor((len(angle_params) / reps) * r)) + index]>(x[connectivity_map[index][0]], x[connectivity_map[index][1]]);
        }, lambda() {
          operands_2qubit[i2]<0>(x[connectivity_map[index][0]], x[connectivity_map[index][1]]);
        }>();
      }>();
    }>();
  }>();
}
