{
  "types": [],
  "constants": [],
  "classical_execution_code": "\nresult = sample({})\nsave({'result': result})\n",
  "execution_preferences": {
    "amplitude_amplification": {
      "iterations": []
    },
    "random_seed": 3810723254
  },
  "kind": "synthesis",
  "functions": [
    {
      "name": "main",
      "port_declarations": {
        "OUT": {
          "name": "OUT",
          "size": {
            "expr": "4"
          },
          "direction": "output",
          "is_signed": false
        }
      },
      "parameters": [],
      "input_ports_wiring": {},
      "output_ports_wiring": {
        "OUT": "OUT_output_Identity:OUT->Output:OUT"
      },
      "body": [
        {
          "function": "HadamardTransform",
          "params": {},
          "function_params": {
            "num_qubits": 4
          },
          "control_states": [],
          "inputs": {},
          "inouts": {},
          "outputs": {
            "OUT[0]": "HadamardTransform_cs4id_Vl2UCP:OUT[0]->ArithmeticOracle_cs4id_ftUi2P:x[0]",
            "OUT[1]": "HadamardTransform_cs4id_Vl2UCP:OUT[1]->ArithmeticOracle_cs4id_ftUi2P:x[1]",
            "OUT[2]": "HadamardTransform_cs4id_Vl2UCP:OUT[2]->ArithmeticOracle_cs4id_ftUi2P:x[2]",
            "OUT[3]": "HadamardTransform_cs4id_Vl2UCP:OUT[3]->ArithmeticOracle_cs4id_ftUi2P:x[3]"
          },
          "name": "HadamardTransform_cs4id_Vl2UCP"
        },
        {
          "function": "ArithmeticOracle",
          "params": {},
          "function_params": {
            "expression": "x>7",
            "definitions": {
              "x": {
                "size": 4,
                "bounds": [
                  0.0,
                  15.0
                ]
              }
            }
          },
          "control_states": [],
          "inputs": {
            "x[0]": "HadamardTransform_cs4id_Vl2UCP:OUT[0]->ArithmeticOracle_cs4id_ftUi2P:x[0]",
            "x[1]": "HadamardTransform_cs4id_Vl2UCP:OUT[1]->ArithmeticOracle_cs4id_ftUi2P:x[1]",
            "x[2]": "HadamardTransform_cs4id_Vl2UCP:OUT[2]->ArithmeticOracle_cs4id_ftUi2P:x[2]",
            "x[3]": "HadamardTransform_cs4id_Vl2UCP:OUT[3]->ArithmeticOracle_cs4id_ftUi2P:x[3]"
          },
          "inouts": {},
          "outputs": {
            "x[0]": "ArithmeticOracle_cs4id_ftUi2P:x[0]->HadamardTransform_cs4id_qYtKs6:IN[0]",
            "x[1]": "ArithmeticOracle_cs4id_ftUi2P:x[1]->HadamardTransform_cs4id_qYtKs6:IN[1]",
            "x[2]": "ArithmeticOracle_cs4id_ftUi2P:x[2]->HadamardTransform_cs4id_qYtKs6:IN[2]",
            "x[3]": "ArithmeticOracle_cs4id_ftUi2P:x[3]->HadamardTransform_cs4id_qYtKs6:IN[3]"
          },
          "name": "ArithmeticOracle_cs4id_ftUi2P"
        },
        {
          "function": "HadamardTransform",
          "params": {},
          "function_params": {
            "num_qubits": 4
          },
          "control_states": [],
          "inputs": {
            "IN[0]": "ArithmeticOracle_cs4id_ftUi2P:x[0]->HadamardTransform_cs4id_qYtKs6:IN[0]",
            "IN[1]": "ArithmeticOracle_cs4id_ftUi2P:x[1]->HadamardTransform_cs4id_qYtKs6:IN[1]",
            "IN[2]": "ArithmeticOracle_cs4id_ftUi2P:x[2]->HadamardTransform_cs4id_qYtKs6:IN[2]",
            "IN[3]": "ArithmeticOracle_cs4id_ftUi2P:x[3]->HadamardTransform_cs4id_qYtKs6:IN[3]"
          },
          "inouts": {},
          "outputs": {
            "OUT[0]": "HadamardTransform_cs4id_qYtKs6:OUT[0]->OUT_output_Identity:OUT[0]",
            "OUT[1]": "HadamardTransform_cs4id_qYtKs6:OUT[1]->OUT_output_Identity:OUT[1]",
            "OUT[2]": "HadamardTransform_cs4id_qYtKs6:OUT[2]->OUT_output_Identity:OUT[2]",
            "OUT[3]": "HadamardTransform_cs4id_qYtKs6:OUT[3]->OUT_output_Identity:OUT[3]"
          },
          "name": "HadamardTransform_cs4id_qYtKs6"
        },
        {
          "function": "Identity",
          "params": {},
          "function_params": {
            "arguments": [
              {
                "size": 4,
                "bounds": [
                  0.0,
                  15.0
                ],
                "name": "OUT"
              }
            ]
          },
          "control_states": [],
          "inputs": {
            "OUT[0]": "HadamardTransform_cs4id_qYtKs6:OUT[0]->OUT_output_Identity:OUT[0]",
            "OUT[1]": "HadamardTransform_cs4id_qYtKs6:OUT[1]->OUT_output_Identity:OUT[1]",
            "OUT[2]": "HadamardTransform_cs4id_qYtKs6:OUT[2]->OUT_output_Identity:OUT[2]",
            "OUT[3]": "HadamardTransform_cs4id_qYtKs6:OUT[3]->OUT_output_Identity:OUT[3]"
          },
          "inouts": {},
          "outputs": {
            "OUT": "OUT_output_Identity:OUT->Output:OUT"
          },
          "name": "OUT_output_Identity"
        }
      ]
    }
  ],
  "constraints": {
    "max_gate_count": {}
  },
  "preferences": {
    "custom_hardware_settings": {
      "basis_gates": [
        "u1",
        "id",
        "u2",
        "cz",
        "cy",
        "p",
        "tdg",
        "x",
        "sdg",
        "s",
        "z",
        "t",
        "rz",
        "sxdg",
        "u",
        "cx",
        "sx",
        "y",
        "rx",
        "h",
        "ry"
      ]
    },
    "random_seed": 3486306164
  }
}
